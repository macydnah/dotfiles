# ~/.config/tmux/tmux.conf

# Unbind default keybindings
unbind -a -Tcopy-mode
# unbind -a -Tcopy-mode-vi
unbind -a -Tprefix
unbind -a -Troot

# Change prefix to Ctrl+a
unbind-key C-b
set-option -g prefix C-a
set-option -g prefix2 None
bind-key C-a send-prefix

# Navigation bindings
bind-key -N "Select the pane to the left of the active pane"    -Troot C-h select-pane -L
bind-key -N "Select the pane below the active pane"             -Troot C-j select-pane -D
bind-key -N "Select the pane above the active pane"             -Troot C-k select-pane -U
bind-key -N "Select the pane to the right of the active pane"   -Troot C-l select-pane -R
bind-key -N "Workaround to clear the screen with PREFIX,Ctrl+l" -Tprefix C-l send-keys C-l
bind-key -N "Move the current pane to the left"                 -Troot C-M-h swap-pane -d -t '{left-of}'
bind-key -N "Move the current pane down"                        -Troot C-M-j swap-pane -d -t '{down-of}'
bind-key -N "Move the current pane up"                          -Troot C-M-k swap-pane -d -t '{up-of}'
bind-key -N "Move the current pane to the right"                -Troot C-M-l swap-pane -d -t '{right-of}'

# General bindings
bind-key -N "Break current pane to it's own window" -Tprefix ! break-pane
bind-key -N "Prompt for a command"                  -Tprefix : command-prompt
bind-key -N "Prompt for a command"                  -Troot C-\; command-prompt
bind-key -N "Display window menu"                   -Tprefix < display-menu -T "#[align=centre]#{window_index}:#{window_name}" -x W -y W "#{?#{>:#{session_windows},1},,-}Swap Left" l { swap-window -t :-1 } "#{?#{>:#{session_windows},1},,-}Swap Right" r { swap-window -t :+1 } "#{?pane_marked_set,,-}Swap Marked" s { swap-window } '' Kill X { kill-window } Respawn R { respawn-window -k } "#{?pane_marked,Unmark,Mark}" m { select-pane -m } Rename n { command-prompt -F -I "#W" { rename-window -t "#{window_id}" "%%" } } '' "New After" w { new-window -a } "New At End" W { new-window }
bind-key -N "Display pane menu"                     -Tprefix > display-menu -T "#[align=centre]#{pane_index} (#{pane_id})" -x P -y P "#{?#{m/r:(copy|view)-mode,#{pane_mode}},Go To Top,}" < { send-keys -X history-top } "#{?#{m/r:(copy|view)-mode,#{pane_mode}},Go To Bottom,}" > { send-keys -X history-bottom } '' "#{?mouse_word,Search For #[underscore]#{=/9/...:mouse_word},}" C-r { if-shell -F "#{?#{m/r:(copy|view)-mode,#{pane_mode}},0,1}" "copy-mode -t=" ; send-keys -X -t = search-backward "#{q:mouse_word}" } "#{?mouse_word,Type #[underscore]#{=/9/...:mouse_word},}" C-y { copy-mode -q ; send-keys -l "#{q:mouse_word}" } "#{?mouse_word,Copy #[underscore]#{=/9/...:mouse_word},}" c { copy-mode -q ; set-buffer "#{q:mouse_word}" } "#{?mouse_line,Copy Line,}" l { copy-mode -q ; set-buffer "#{q:mouse_line}" } '' "#{?mouse_hyperlink,Type #[underscore]#{=/9/...:mouse_hyperlink},}" C-h { copy-mode -q ; send-keys -l "#{q:mouse_hyperlink}" } "#{?mouse_hyperlink,Copy #[underscore]#{=/9/...:mouse_hyperlink},}" h { copy-mode -q ; set-buffer "#{q:mouse_hyperlink}" } '' "Horizontal Split" h { split-window -h } "Vertical Split" v { split-window -v } '' "#{?#{>:#{window_panes},1},,-}Swap Up" u { swap-pane -U } "#{?#{>:#{window_panes},1},,-}Swap Down" d { swap-pane -D } "#{?pane_marked_set,,-}Swap Marked" s { swap-pane } '' Kill X { kill-pane } Respawn R { respawn-pane -k } "#{?pane_marked,Unmark,Mark}" m { select-pane -m } "#{?#{>:#{window_panes},1},,-}#{?window_zoomed_flag,Unzoom,Zoom}" z { resize-pane -Z }
bind-key -N "List key bindings"                     -Tprefix ? list-keys
bind-key -N "Enter copy mode"                       -Tprefix [ copy-mode -e
# bind-key -N "Enter copy mode and scroll up"         -Troot C-M-k copy-mode -eu
# bind-key -N "Enter copy mode and scroll down"       -Troot C-M-j copy-mode -ed
bind-key -N "Enter copy mode and scroll down"       -Tprefix j copy-mode -ed
bind-key -N "Enter copy mode and scroll up"         -Tprefix k copy-mode -eu
bind-key -N "Paste the most recent paste buffer"    -Tprefix ] paste-buffer -p
bind-key -N "Toggle the status bar visibility"      -Tprefix b set-option status
bind-key -N "Create a new window"                   -Tprefix c new-window
bind-key -N "Detach the current client"             -Tprefix d detach-client
bind-key -N "Select the next window"                -Tprefix n next-window
bind-key -N "Select the previous window"            -Tprefix p previous-window
bind-key -N "Zoom the active pane"                  -Tprefix z resize-pane -Z
bind-key -N "Customize options"                     -Tprefix F12 customize-mode -Z
bind-key -N "Reload tmux config"                    -Tprefix R {
	source-file ~/.config/tmux/tmux.conf
	display "Config reloaded!"
}
# split panes
bind-key -N "Create a new pane (horizontal split)"  -Troot C-Enter split-window -h
bind-key -N "Create a new pane (vertical split)"    -Troot C-M-Enter split-window -v

# Copy mode bindings
bind-key -N "Begin selection"    -Tcopy-mode-vi v send-keys -X begin-selection
bind-key -N "Yank the selection" -Tcopy-mode-vi y send-keys -X copy-pipe 'wl-copy -n'
bind-key -N "Yank entire line"   -Tcopy-mode-vi Y send-keys -X copy-pipe-line 'wl-copy -n'

# Resize mode bindings
set-option -g repeat-time 500
bind-key -r -N "Resize the pane up"         -Tresize k resize-pane -U 5
bind-key -r -N "Resize the pane down"       -Tresize j resize-pane -D 5
bind-key -r -N "Resize the pane left"       -Tresize h resize-pane -L 5
bind-key -r -N "Resize the pane right"      -Tresize l resize-pane -R 5
bind-key -r -N "Resize the pane up by 1"    -Tresize C-k resize-pane -U 1
bind-key -r -N "Resize the pane down by 1"  -Tresize C-j resize-pane -D 1
bind-key -r -N "Resize the pane left by 1"  -Tresize C-h resize-pane -L 1
bind-key -r -N "Resize the pane right by 1" -Tresize C-l resize-pane -R 1
bind-key -N "Enter resize mode"             -Tprefix r switch-client -Tresize

# Pipe copied selections to system clipboard trough Wayland-copy
bind-key -Tcopy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "wl-copy -n"

# Don't exit with EOF
set-environment -g 'IGNOREEOF' 1

# Server options
set-option -s backspace C-?
set-option -s buffer-limit 50
set-option -s copy-command 'wl-copy -n'
set-option -s default-terminal 'tmux-256color'
set-option -s escape-time 10
set-option -s editor 'nvim'
set-option -s exit-empty on
set-option -s exit-unattached off
set-option -s extended-keys off
set-option -s extended-keys-format 'xterm'
set-option -s focus-events on
set-option -s history-file ''
set-option -s set-clipboard external
# https://gist.github.com/andersevenrud/015e61af2fd264371032763d4ed965b6#tmux
set-option -as terminal-overrides ",$TERM:RGB"

# Session options
set-option -g activity-action 'any'
set-option -g assume-paste-time 1
set-option -g base-index 1
set-option -g bell-action 'any'
set-option -g default-command ''
set-option -g default-shell "$SHELL"
set-option -g default-size '80x24'
set-option -g destroy-unattached off
set-option -g detach-on-destroy on
set-option -g display-time 0
set-option -g history-limit 10000
set-option -g key-table 'root'
set-option -g lock-after-time 0
# set-option -g lock-command 'lock -np'
set-option -g menu-style 'fg=yellow'
set-option -g menu-selected-style 'fg=black, bg=yellow'
set-option -g menu-border-style 'fg=yellow'
set-option -g menu-border-lines rounded
set-option -g message-command-style 'fg=black, bg=red'
set-option -g message-line 0
set-option -g message-style 'fg=black, bg=yellow'
set-option -g mouse on # Enable mouse control (clickable windows, panes, resizable panes)
set-option -g prefix-timeout 0
set-option -g renumber-windows on
set-option -g set-titles on
set-option -g set-titles-string "#{user}@#h: #W"
# statusbar
set-option -g status on
set-option -g status-position bottom
set-option -g status-interval 60
set-option -g status-justify 'left'
set-option -g status-keys 'emacs'
set-option -g status-style 'fg=black'
set-option -ag status-style 'bg=green'
set-option -g status-left '[#S] '
set-option -g status-left-length 10
set-option -g status-left-style 'fg=black bg=green'
set-option -g status-right '│ %H:%M %d-%b-%Y '
set-option -g status-right-length 50
set-option -g status-right-style 'fg=black, bg=green'
# don't do anything when a "bell" rings
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off

# Window options
set-option -wg aggressive-resize on
set-option -wg automatic-rename on
set-option -wg automatic-rename-format "\
#{?pane_in_mode,[tmux],#{pane_current_command}}\
#{?pane_dead,[dead],}\
"
set-option -wg clock-mode-colour 'green'
set-option -wg clock-mode-style '24'
# set-option -wg fill-character '─'
set-option -wg fill-character '.'
set-option -wg main-pane-height 24
set-option -wg main-pane-width 80
set-option -wg copy-mode-match-style 'fg=black, bg=cyan'
set-option -wg copy-mode-mark-style 'fg=black, bg=red'
set-option -wg copy-mode-current-match-style 'fg=black, bg=magenta'
set-option -wg mode-keys 'vi' # vi-style key bindings in copy mode
set-option -wg mode-style 'fg=black, bg=green' # copy mode style
set-option -wg monitor-activity on
set-option -wg monitor-bell on
set-option -wg monitor-silence 0
set-option -wg other-pane-height 0
set-option -wg other-pane-width 0
# panes
set-option -wg pane-active-border-style 'fg=green'
set-option -wg pane-base-index 1
set -g pane-border-format "\
#{?pane_active,\
	┤#[reverse bold] #{pane_current_path} #[default fg=green bg=default]├\
,\
	#[fg=grey bg=default]#{pane_current_path}#[fg=default]\
}"
set-option -wg pane-border-indicators 'colour'
set-option -wg pane-border-lines 'single'
set-option -wg pane-border-status 'off'
set-option -wg pane-border-style 'fg=gray'
# popups
set-option -wg popup-style 'default'
set-option -wg popup-border-style 'fg=brightgreen'
set-option -wg popup-border-lines 'rounded'
# window status
set-option -wg window-status-activity-style 'default'
set-option -wg window-status-bell-style 'fg=yellow bg=red'
set-option -wg window-status-current-format "#I:#W#{?window_flags,#{window_flags}, }"
set-option -wg window-status-current-style 'fg=black bg=brightgreen'
set-option -wg window-status-format "#I:#W#{?window_flags,#{window_flags}, }"
set-option -wg window-status-last-style 'default'
set-option -wg window-status-separator ' '
set-option -wg window-status-style 'default'
set-option -wg window-size 'latest'
set-option -wg wrap-search on

# Pane options
# inherit from window options. This means any pane option may be set
# as a window option to apply the option to all panes in the window
# see "OPTIONS" section in `man tmux(1)`
set-option -wg allow-passthrough off
set-option -wg allow-rename off
set-option -wg allow-set-title on
set-option -wg alternate-screen on
set-option -wg cursor-colour 'default'
# set-option -wg pane-colours ''
set-option -wg cursor-style 'blinking-underline'
set-option -wg remain-on-exit off
set-option -wg remain-on-exit-format "Pane is dead (#{?#{!=:#{pane_dead_status},},status #{pane_dead_status},}#{?#{!=:#{pane_dead_signal},},signal #{pane_dead_signal},}, #{t:pane_dead_time})"
set-option -wg scroll-on-clear on
set-option -wg synchronize-panes off
set-option -wg window-active-style 'default'
set-option -wg window-style 'default'

# enable Yazi's image preview to work correctly in tmux
# https://yazi-rs.github.io/docs/image-preview/#tmux
set -g allow-passthrough on
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

### STATUS BAR ###
set -g status-interval 60
set -g status-style "bg=green fg=black"

set -g status-left ""
set -g status-left-length 0

set -g window-status-separator ''
set -g window-status-format "\
#[bg=brightgreen] #{window_index}:#{window_name} \
#{?#{==:#{window_index},#{last_window_index}},\
	#[bg=green fg=brightgreen]\
,\
}"

set -g window-status-current-format "\
#[bg=brightgreen fg=yellow]\
#[bg=green fg=brightgreen]\
#[bg=green fg=black] #{window_index}: #{window_name} \
#{?#{==:#{window_index},#{last_window_index}},\
	│\
,\
	#[bg=brightgreen fg=green]\
}"

set -g status-right "\
#[fg=brightgreen]\
#[bg=brightgreen fg=yellow]\
#[bg=brightgreen fg=black]#{?#{==:#{client_key_table},prefix}, PREFIX ,}\
#[bg=brightgreen fg=black]#{?#{==:#{client_key_table},resize}, RESIZE ,}\
#[fg=green]\
#[bg=green fg=black]#{?window_zoomed_flag, ZOOMED ,}\
#[bg=green fg=yellow]\
#[bg=yellow fg=black]   #{session_name} \
#[fg=brightgreen]\
#[bg=brightgreen fg=black] %d-%b-%Y #[fg=green]\
#[bg=green fg=black] %I:%M %p \
#[fg=brightgreen]\
#[bg=brightgreen fg=yellow]\
"
set -g status-right-length 500
