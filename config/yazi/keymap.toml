# ~/.config/yazi/keymap.toml

# A TOML linter such as https://taplo.tamasfe.dev/ can use this schema to validate your config.
# If you encounter any issues, please make an issue at https://github.com/yazi-rs/schemas.
"$schema" = "https://yazi-rs.github.io/schemas/keymap.json"

# https://yazi-rs.github.io/docs/configuration/keymap

[mgr]
# https://yazi-rs.github.io/docs/configuration/keymap#manager
keymap = [
	{ on = "<Esc>",run = "escape --all",      desc = "Exit visual mode, clear selected, or cancel search" },
	{ on = "<C-[>",run = "escape --all",      desc = "Exit visual mode, clear selected, or cancel search" },
	{ on = "<C-w>",run = "close",             desc = "Close the current tab, or quit if it is last tab" },
	{ on = "<C-d>",run = "close",             desc = "Close the current tab, or quit if it is last tab" },
	{ on = "<C-q>",run = "quit --no-cwd-file",desc = "Exit the process without writing cwd-file" },

	# Navigation
	{ on = "<Enter>",   run = "plugin smart-enter",desc = "Open file/Enter directory" },
	{ on = "<PageUp>",  run = "arrow -100%",       desc = "Move cursor up one page" },
	{ on = "<PageDown>",run = "arrow 100%",        desc = "Move cursor down one page" },
	{ on = "H",         run = "back",              desc = "Go back to the previous directory" },
	{ on = "J",         run = "arrow 50%",         desc = "Move cursor down half page" },
	{ on = "K",         run = "arrow -50%",        desc = "Move cursor up half page" },
	{ on = "L",         run = "plugin smart-enter",desc = "Go to child directory/Open file" },
	{ on = "h",         run = "leave",             desc = "Go back to the parent directory" },
	{ on = "j",         run = "arrow 1",           desc = "Move cursor down" },
	{ on = "k",         run = "arrow -1",          desc = "Move cursor up" },
	{ on = "l",         run = "enter",             desc = "Go to child directory" },

	# Previewer
	{ on = "<A-f>",run = "plugin toggle-pane max-preview",desc = "Maximize or restore preview" },
	{ on = "<A-k>",run = "seek -1",                       desc = "Seek up in the preview" },
	{ on = "<A-j>",run = "seek 1",                        desc = "Seek down in the preview" },
	{ on = "<C-y>",run = "seek -1",                       desc = "Seek up in the preview" },
	{ on = "<C-e>",run = "seek 1",                        desc = "Seek down in the preview" },

	# Selection
	{ on = "<Space>",run = [ "toggle", "arrow 1" ],desc = "Toggle the current selection state" },
	{ on = "v",      run = "visual_mode",          desc = "Enter visual mode (selection mode)" },
	{ on = "V",      run = "visual_mode --unset",  desc = "Enter visual mode (unset mode)" },
	{ on = "<C-a>",  run = "toggle_all --state=on",desc = "Select all files" },
	{ on = "<C-r>",  run = "toggle_all",           desc = "Inverse selection of all files" },

	# Functions
	{ on = "<Tab>",    run = "spot",                          desc = "Spot hovered file" },
	{ on = "<C-Enter>",run = "open --interactive",            desc = "Open selected files interactively" },
	{ on = "-",        run = "link",                          desc = "Symlink the absolute path of yanked files" },
	{ on = "_",        run = "link --relative",               desc = "Symlink the relative path of yanked files" },
	{ on = "<Delete>", run = "remove --permanently",          desc = "Permanently delete selected files" },
	{ on = "<Insert>", run = "create",                        desc = "Create a file (ends with / for directories)" },
	{ on = "M",        run = "plugin mount",                  desc = "Mount manager" },
	{ on = "r",        run = "rename --cursor=before_ext",    desc = "Rename selected file(s)" },
	{ on = ":",        run = 'shell " ; read" --block --cursor=0  --interactive', desc = "Run a shell command (block until finishes)" },
	{ on = "<F12>",    run = 'shell "$SHELL" --block confirm',desc = "Open shell here" },
	{ on = ".",        run = "hidden toggle",                 desc = "Toggle the visibility of hidden files" },
	{ on = "s",        run = "search fd",                     desc = "Search files by name using fd" },
	{ on = "S",        run = "search rg",                     desc = "Search files by content using ripgrep" },
	{ on = "<C-s>",    run = "escape --search",               desc = "Cancel the ongoing search" },
	{ on = "z",        run = "plugin zoxide",                 desc = "Jump to a directory using zoxide" },
	{ on = "Z",        run = "plugin fzf",                    desc = "Jump to a directory or reveal a file using fzf" },

	# Linemode
	{ on = ["m","s"], run = "linemode size",        desc = "Set linemode to size" },
	{ on = ["m","p"], run = "linemode permissions", desc = "Set linemode to permissions" },
	{ on = ["m","c"], run = "linemode ctime",       desc = "Set linemode to ctime" },
	{ on = ["m","m"], run = "linemode mtime",       desc = "Set linemode to mtime" },
	{ on = ["m","o"], run = "linemode owner",       desc = "Set linemode to owner" },
	{ on = ["m","n"], run = "linemode none",        desc = "Set linemode to none" },

	# Yank/Cut/Paste
	{ on = ["y","y"], run = "yank",                  desc = "Yank selected files (copy)" },
	{ on = ["d","d"], run = "yank --cut",            desc = "Yank selected files (cut)" },
	{ on = ["d","u"], run = "unyank",                desc = "Cancel the yank status" },
	{ on = "p",       run = "paste",                 desc = "Paste yanked files" },
	{ on = "P",       run = "paste --force",         desc = "Paste yanked files (overwrite if the destination exists)" },
	{ on = ["y","p"], run = "copy path",             desc = "Copy the file path" },
	{ on = ["y","d"], run = "copy dirname",          desc = "Copy the directory path" },
	{ on = ["y","f"], run = "copy filename",         desc = "Copy the filename" },
	{ on = ["y","n"], run = "copy name_without_ext", desc = "Copy the filename without extension" },
	{ on = ["y","u"], run = "unyank",                desc = "Cancel the yank status" },

	# Filter
	{ on = "f", run = "filter --smart", desc = "Filter files" },

	# Find
	{ on = "/", run = "find --smart",            desc = "Find next file" },
	{ on = "?", run = "find --previous --smart", desc = "Find previous file" },
	{ on = "n", run = "find_arrow",              desc = "Go to the next found" },
	{ on = "N", run = "find_arrow --previous",   desc = "Go to the previous found" },

	# Sorting
	{ on = [ ",", "m" ], run = [ "sort mtime --reverse=no", "linemode mtime" ], desc = "Sort by modified time" },
	{ on = [ ",", "M" ], run = [ "sort mtime --reverse", "linemode mtime" ],    desc = "Sort by modified time (reverse)" },
	{ on = [ ",", "c" ], run = [ "sort btime --reverse=no", "linemode btime" ], desc = "Sort by created time" },
	{ on = [ ",", "C" ], run = [ "sort btime --reverse", "linemode btime" ],    desc = "Sort by created time (reverse)" },
	{ on = [ ",", "e" ], run = "sort extension --reverse=no",                   desc = "Sort by extension" },
	{ on = [ ",", "E" ], run = "sort extension --reverse",                      desc = "Sort by extension (reverse)" },
	{ on = [ ",", "a" ], run = "sort alphabetical --reverse=no",                desc = "Sort alphabetically" },
	{ on = [ ",", "A" ], run = "sort alphabetical --reverse",                   desc = "Sort alphabetically (reverse)" },
	{ on = [ ",", "n" ], run = "sort natural --reverse=no",                     desc = "Sort naturally" },
	{ on = [ ",", "N" ], run = "sort natural --reverse",                        desc = "Sort naturally (reverse)" },
	{ on = [ ",", "s" ], run = [ "sort size --reverse=no", "linemode size" ],   desc = "Sort by size" },
	{ on = [ ",", "S" ], run = [ "sort size --reverse", "linemode size" ],      desc = "Sort by size (reverse)" },
	{ on = [ ",", "r" ], run = "sort random --reverse=no",                      desc = "Sort randomly" },

	# Goto
	{ on = ["g","g"], run = "arrow top",                      desc = "Go to top" },
	{ on = "G",       run = "arrow bot",                      desc = "Go to bottom" },
	{ on = ["g","h"], run = "cd ~",                           desc = "Go to Home" },
	{ on = ["g","r"], run = "cd /",                           desc = "Go to /" },
	{ on = ["g","c"], run = "cd ~/.config",                   desc = "Go to ~/.config" },
	{ on = ["g","d"], run = "cd ~/.dotfiles",                 desc = "Go to ~/.dotfiles" },
	{ on = ["g","t"], run = "cd /tmp",                        desc = "Go to /tmp" },
	{ on = ["g","`"], run = "cd ~/Documents/UnADM/2025-2-B1", desc = "Go to homework" },
	{ on = ["g","u"], run = "cd ~/Documents/UnADM",           desc = "Go to UnADM" },
	{ on = ["g","a"], run = "cd $AUR",                        desc = "Go to $AUR" },
	{ on = ["c","d"], run = "cd --interactive",               desc = "Go to a directory interactively" },

	# Tabs
	{ on = "<C-t>", run = "tab_create --current", desc = "Create a new tab with CWD" },

	{ on = "1", run = "tab_switch 0", desc = "Switch to the first tab" },
	{ on = "2", run = "tab_switch 1", desc = "Switch to the second tab" },
	{ on = "3", run = "tab_switch 2", desc = "Switch to the third tab" },
	{ on = "4", run = "tab_switch 3", desc = "Switch to the fourth tab" },
	{ on = "5", run = "tab_switch 4", desc = "Switch to the fifth tab" },
	{ on = "6", run = "tab_switch 5", desc = "Switch to the sixth tab" },
	{ on = "7", run = "tab_switch 6", desc = "Switch to the seventh tab" },
	{ on = "8", run = "tab_switch 7", desc = "Switch to the eighth tab" },
	{ on = "9", run = "tab_switch 8", desc = "Switch to the ninth tab" },

	{ on = "[", run = "tab_switch -1 --relative", desc = "Switch to the previous tab" },
	{ on = "]", run = "tab_switch 1 --relative",  desc = "Switch to the next tab" },

	{ on = "{", run = "tab_swap -1", desc = "Swap current tab with previous tab" },
	{ on = "}", run = "tab_swap 1",  desc = "Swap current tab with next tab" },

	# Tasks
	{ on = "w", run = "tasks:show", desc = "Show task manager" },

	# Help
	{ on = "<F1>", run = "help", desc = "Open help" },
]

[tasks]
# https://yazi-rs.github.io/docs/configuration/keymap#tasks
keymap = [
	{ on = "<Esc>", run = "close", desc = "Close task manager" },
	{ on = "w",     run = "close", desc = "Close task manager" },

	{ on = "k", run = "arrow -1", desc = "Move cursor up" },
	{ on = "j", run = "arrow 1",  desc = "Move cursor down" },

	{ on = "<Enter>", run = "inspect", desc = "Inspect the task" },
	{ on = "x",       run = "cancel",  desc = "Cancel the task" },

	# Help
	{ on = "<F1>", run = "help", desc = "Open help" },
]

[pick]
# https://yazi-rs.github.io/docs/configuration/keymap/#pick
keymap = [
	{ on = "<Esc>",   run = "close",          desc = "Cancel the picker" },
	{ on = "<C-[>",   run = "close",          desc = "Cancel the picker" },
	{ on = "<Enter>", run = "close --submit", desc = "Submit the picker" },

	{ on = "k", run = "arrow -1", desc = "Move cursor up" },
	{ on = "j", run = "arrow 1",  desc = "Move cursor down" },

	{ on = "<Up>",   run = "arrow -1", desc = "Move cursor up" },
	{ on = "<Down>", run = "arrow 1",  desc = "Move cursor down" },

	# Help
	{ on = "<F1>", run = "help", desc = "Open help" },
]

[input]
# https://yazi-rs.github.io/docs/configuration/keymap#input
keymap = [
	{ on = "<Esc>",   run = "close",          desc = "Cancel input" },
	{ on = "<C-[>",   run = "close",          desc = "Cancel input" },
	{ on = "<Enter>", run = "close --submit", desc = "Submit input" },

	# Character-wise movement
	{ on = "<Left>",  run = "move -1", desc = "Move back a character" },
	{ on = "<Right>", run = "move 1",  desc = "Move forward a character" },
	{ on = "<C-b>",   run = "move -1", desc = "Move back a character" },
	{ on = "<C-f>",   run = "move 1",  desc = "Move forward a character" },

	# Word-wise movement
	{ on = "<A-b>", run = "backward",              desc = "Move back to the start of the current or previous word" },
	{ on = "<A-f>", run = "forward --end-of-word", desc = "Move forward to the end of the current or next word" },

	# Line-wise movement
	{ on = "<C-a>",  run = "move -999", desc = "Move to the BOL" },
	{ on = "<C-e>",  run = "move 999",  desc = "Move to the EOL" },
	{ on = "<Home>", run = "move -999", desc = "Move to the BOL" },
	{ on = "<End>",  run = "move 999",  desc = "Move to the EOL" },

	# Delete
	{ on = "<Backspace>", run = "backspace",	 desc = "Delete the character before the cursor" },
	{ on = "<Delete>",    run = "backspace --under", desc = "Delete the character under the cursor" },
	{ on = "<C-h>",       run = "backspace",         desc = "Delete the character before the cursor" },
	{ on = "<C-d>",       run = "backspace --under", desc = "Delete the character under the cursor" },

	# Kill
	{ on = "<C-u>", run = "kill bol",      desc = "Kill backwards to the BOL" },
	{ on = "<C-k>", run = "kill eol",      desc = "Kill forwards to the EOL" },
	{ on = "<C-w>", run = "kill backward", desc = "Kill backwards to the start of the current word" },
	{ on = "<A-d>", run = "kill forward",  desc = "Kill forwards to the end of the current word" },

	# Help
	{ on = "<F1>", run = "help", desc = "Open help" },
]

[confirm]
# https://yazi-rs.github.io/docs/configuration/keymap#confirm
keymap = [
	{ on = "<Esc>",   run = "close",          desc = "Cancel the confirm" },
	{ on = "<C-[>",   run = "close",          desc = "Cancel the confirm" },
	{ on = "<Enter>", run = "close --submit", desc = "Submit the confirm" },

	{ on = "n", run = "close",          desc = "Cancel the confirm" },
	{ on = "y", run = "close --submit", desc = "Submit the confirm" },

	{ on = "k", run = "arrow -1", desc = "Move cursor up" },
	{ on = "j", run = "arrow 1",  desc = "Move cursor down" },

	# Help
	{ on = "<F1>", run = "help", desc = "Open help" },
]

[completion]
# https://yazi-rs.github.io/docs/configuration/keymap#completion
keymap = [
	{ on = "<C-[>",   run = "close",                                      desc = "Cancel completion" },
	{ on = "<Tab>",   run = "close --submit",                             desc = "Submit the completion" },
	{ on = "<Enter>", run = [ "close --submit", "close_input --submit" ], desc = "Submit the completion and input" },

	{ on = "<A-k>", run = "arrow -1", desc = "Move cursor up" },
	{ on = "<A-j>", run = "arrow 1",  desc = "Move cursor down" },

	{ on = "<C-p>", run = "arrow -1", desc = "Move cursor up" },
	{ on = "<C-n>", run = "arrow 1",  desc = "Move cursor down" },

	# Help
	{ on = "<F1>", run = "help", desc = "Open help" },
]

[help]
# https://yazi-rs.github.io/docs/configuration/keymap#help
keymap = [
	{ on = "<Esc>", run = "escape", desc = "Clear the filter, or hide the help" },
	{ on = "<C-[>", run = "escape", desc = "Clear the filter, or hide the help" },

	# Navigation
	{ on = "k", run = "arrow -1", desc = "Move cursor up" },
	{ on = "j", run = "arrow 1",  desc = "Move cursor down" },

	# Filtering
	{ on = "f", run = "filter", desc = "Apply a filter for the help items" },
]
